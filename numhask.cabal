cabal-version: 2.4
name: numhask
version: 0.7.0.0
synopsis:
  A numeric class heirarchy.
description:
    This package provides numeric classes as an alternative to the prelude specified in haskell98.
    .
    == Usage
    .
    >>> import Chart
    >>>
    >>> let xs = [[(0.0, 1.0), (1.0, 1.0), (2.0, 5.0)], [(0.0, 0.0), (3.0, 3.0)], [(0.5, 4.0), (0.5, 0)]] :: [[(Double, Double)]]
    >>> let ls = fmap (PointXY . uncurry Point) <$> xs
    >>> let anns = zipWith (\w c -> LineA (LineStyle w c)) [0.015, 0.03, 0.01] palette1
    >>> let lineChart = zipWith Chart anns ls
    >>> writeChartSvgHud "other/lineshud.svg" lineChart
    .
    ![main example](other/lineshud.svg)
    .
    See "Chart" for a broad overview of concepts, and "Chart.Examples" for a variety of practical examples.

  A numeric class heirarchy.
category:
  mathematics
homepage:
  https://github.com/tonyday567/numhask#readme
bug-reports:
  https://github.com/tonyday567/numhask/issues
author:
  Tony Day
maintainer:
  tonyday567@gmail.com
copyright:
  Tony Day
license:
  BSD-3-Clause
license-file:
  LICENSE
build-type:
  Simple

extra-doc-files:
  other/*.svg,
  readme.md

source-repository head
  type:
    git
  location:
    https://github.com/tonyday567/numhask
  subdir:
    numhask
library
  hs-source-dirs:
    src
  ghc-options:
    -Wall
    -Wcompat
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wredundant-constraints
  build-depends:
    base >=4.7 && <5,
    protolude >=0.3 && <0.4,
    bifunctors >= 5.5 && < 5.6,
    mmorph >= 1.1 && < 1.2,
    transformers >= 0.5 && < 0.6,
    text >= 1.2 && < 1.3,
  exposed-modules:
    NumHask
    NumHask.Algebra.Abstract.Additive
    NumHask.Algebra.Abstract.Field
    NumHask.Algebra.Abstract.Group
    NumHask.Algebra.Abstract.Lattice
    NumHask.Algebra.Abstract.Module
    NumHask.Algebra.Abstract.Multiplicative
    NumHask.Algebra.Abstract.Ring
    NumHask.Analysis.Metric
    NumHask.Data.Complex
    NumHask.Data.Integral
    NumHask.Data.LogField
    NumHask.Data.Pair
    NumHask.Data.Positive
    NumHask.Data.Rational
    NumHask.Data.Wrapped
    NumHask.Exception
    NumHask.Prelude
  other-modules:
  default-language: Haskell2010

test-suite test
  type: exitcode-stdio-1.0
  main-is: test.hs
  hs-source-dirs:
    test
  build-depends:
    QuickCheck >= 2.13 && < 2.15,
    base >=4.7 && <5,
    doctest >= 0.16 && < 0.18,
    numhask,
  default-language: Haskell2010
  ghc-options:
    -Wall
    -Wcompat
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wredundant-constraints
